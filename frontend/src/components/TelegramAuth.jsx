import React, { useEffect, useState } from 'react';
import { useSearchParams } from 'react-router-dom';

const TelegramAuth = () => {
  const [searchParams] = useSearchParams();
  const [telegramUser, setTelegramUser] = useState(null);
  const [status, setStatus] = useState('loading');
  const [isTelegramWebApp, setIsTelegramWebApp] = useState(false);

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const API_URL = import.meta.env.VITE_API_URL || 'https://wblist.ru';
  const FRONTEND_URL = import.meta.env.VITE_FRONTEND_URL || 'https://wblist.ru';

  // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ Telegram Web App
  const checkTelegramContext = () => {
    const tg = window.Telegram?.WebApp;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ Telegram Web App
    const hasWebApp = !!tg;
    const hasInitData = !!tg?.initData;
    const hasInitDataUnsafe = !!tg?.initDataUnsafe?.user;
    const hasVersion = !!tg?.version;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL, –∫–æ—Ç–æ—Ä—ã–µ Telegram –ø–µ—Ä–µ–¥–∞–µ—Ç –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
    const urlParams = new URLSearchParams(window.location.search);
    const hasTelegramParams = urlParams.has('tgWebAppData') || 
                             urlParams.has('tgWebAppPlatform') ||
                             urlParams.has('tgWebAppVersion');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º user agent (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫)
    const userAgent = navigator.userAgent.toLowerCase();
    const hasTelegramUserAgent = userAgent.includes('telegram') || 
                                userAgent.includes('webview');
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:', {
      hasWebApp,
      hasInitData,
      hasInitDataUnsafe,
      hasVersion,
      hasTelegramParams,
      hasTelegramUserAgent,
      urlParams: Object.fromEntries(urlParams.entries()),
      userAgent: navigator.userAgent
    });

    // –°—á–∏—Ç–∞–µ–º, —á—Ç–æ –º—ã –≤ Telegram, –µ—Å–ª–∏ –µ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏
    return (hasWebApp && (hasInitData || hasInitDataUnsafe || hasVersion)) || 
           hasTelegramParams ||
           (hasWebApp && hasTelegramUserAgent);
  };

  useEffect(() => {
    const initTelegramAuth = () => {
      const inTelegram = checkTelegramContext();
      setIsTelegramWebApp(inTelegram);

      if (inTelegram && window.Telegram?.WebApp) {
        console.log('‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram Web App');
        const tg = window.Telegram.WebApp;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
        try {
          tg.expand();
          tg.ready();
          console.log('‚úÖ Telegram Web App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram Web App:', error);
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = tg.initDataUnsafe?.user;
        console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram:', user);
        setTelegramUser(user);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ JWT —Ç–æ–∫–µ–Ω (–ø–æ—Å–ª–µ OAuth)
        const token = searchParams.get('token');
        console.log('üîë –¢–æ–∫–µ–Ω –∏–∑ URL:', token);
        
        if (token && user) {
          console.log('üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
          handleOAuthSuccess(token, user);
        } else {
          console.log('‚úÖ –°—Ç–∞—Ç—É—Å: –≥–æ—Ç–æ–≤ –∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
          setStatus('ready');
        }
      } else {
        console.log('‚ùå –ù–µ –≤ Telegram Web App');
        setIsTelegramWebApp(false);
        setStatus('not_in_telegram');
      }
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —É–≤–µ—Ä–µ–Ω–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    setTimeout(initTelegramAuth, 100);
  }, [searchParams]);

  const handleOAuthSuccess = (token, tgUser) => {
    console.log('üîÑ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ OAuth —É—Å–ø–µ—Ö–∞');
    
    if (window.Telegram?.WebApp) {
      const data = {
        type: 'oauth_success',
        jwt_token: token,
        telegram_user: {
          id: tgUser.id,
          username: tgUser.username,
          first_name: tgUser.first_name
        }
      };
      
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–∞:', data);
      
      try {
        window.Telegram.WebApp.sendData(JSON.stringify(data));
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –±–æ—Ç–∞');
        
        setTimeout(() => {
          console.log('üîÑ –ó–∞–∫—Ä—ã—Ç–∏–µ Web App');
          window.Telegram.WebApp.close();
        }, 1000);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–∞:', error);
        // Fallback –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞
        setStatus('success');
      }
    } else {
      console.error('‚ùå Telegram Web App –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
      setStatus('success');
    }
  };

  const startGoogleOAuth = () => {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ Google OAuth');
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π OAuth URL
    let oauthUrl = `${API_URL}/oauth/google?source=telegram`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º Telegram –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    if (telegramUser) {
      oauthUrl += `&tg_id=${telegramUser.id}&tg_username=${telegramUser.username}`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º redirect_uri –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ Web App
    const currentUrl = encodeURIComponent(`${FRONTEND_URL}/telegram-auth`);
    oauthUrl += `&redirect_uri=${currentUrl}`;
    
    console.log('üîó –ü–µ—Ä–µ—Ö–æ–¥ –ø–æ OAuth URL:', oauthUrl);
    window.location.href = oauthUrl;
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ OAuth
  if (status === 'success') {
    return (
      <div style={{ 
        padding: '40px', 
        textAlign: 'center',
        fontFamily: 'Arial, sans-serif' 
      }}>
        <h2 style={{ color: '#22c55e', marginBottom: '20px' }}>‚úÖ –ê–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–≤—è–∑–∞–Ω!</h2>
        <p style={{ marginBottom: '30px', fontSize: '16px' }}>
          –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.
        </p>
        <button 
          onClick={() => window.close()}
          style={{
            padding: '12px 24px',
            backgroundColor: '#0088cc',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            fontSize: '16px'
          }}
        >
          –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ
        </button>
      </div>
    );
  }

  // –ï—Å–ª–∏ –Ω–µ –≤ Telegram Web App, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (!isTelegramWebApp) {
    return (
      <div style={{ 
        padding: '40px', 
        textAlign: 'center',
        fontFamily: 'Arial, sans-serif' 
      }}>
        <h2>üì± Telegram Auth</h2>
        <p>–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.</p>
        <p>–û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.</p>
        
        <div style={{ marginTop: '20px' }}>
          <a 
            href="https://t.me/wishbenefitbot" 
            target="_blank" 
            rel="noopener noreferrer"
            style={{
              display: 'inline-block',
              padding: '10px 20px',
              backgroundColor: '#0088cc',
              color: 'white',
              textDecoration: 'none',
              borderRadius: '5px',
              marginRight: '10px'
            }}
          >
            üì≤ –û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞
          </a>
          
          <button 
            onClick={() => window.location.href = FRONTEND_URL}
            style={{
              padding: '10px 20px',
              backgroundColor: '#6c757d',
              color: 'white',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </button>
        </div>
      </div>
    );
  }

  if (status === 'loading') {
    return (
      <div style={{ 
        padding: '40px', 
        textAlign: 'center',
        fontFamily: 'Arial, sans-serif' 
      }}>
        <h2>‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...</h2>
        <p>–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App</p>
      </div>
    );
  }

  return (
    <div style={{ 
      padding: '20px', 
      fontFamily: 'Arial, sans-serif',
      maxWidth: '500px',
      margin: '0 auto',
      minHeight: '100vh',
      backgroundColor: '#f8f9fa'
    }}>
      <h2 style={{ 
        textAlign: 'center', 
        marginBottom: '30px',
        color: '#1f2937'
      }}>
        üîê –ü—Ä–∏–≤—è–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞
      </h2>
      
      {telegramUser && (
        <div style={{ 
          marginBottom: '30px',
          padding: '20px',
          backgroundColor: 'white',
          borderRadius: '12px',
          textAlign: 'center',
          boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
        }}>
          <p style={{ margin: '0 0 10px 0', fontSize: '18px', fontWeight: 'bold' }}>
            –ü—Ä–∏–≤–µ—Ç, <strong>{telegramUser.first_name}</strong>! üëã
          </p>
          <p style={{ margin: 0, color: '#666', fontSize: '14px' }}>
            –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ –ø—Ä–∏–≤—è–∂–∏—Ç–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç
          </p>
        </div>
      )}
      
      <div style={{ 
        textAlign: 'center',
        padding: '20px',
        backgroundColor: 'white',
        borderRadius: '12px',
        boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
      }}>
        <button 
          onClick={startGoogleOAuth}
          style={{
            padding: '15px 30px',
            backgroundColor: '#4285f4',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            fontSize: '16px',
            fontWeight: 'bold',
            width: '100%',
            maxWidth: '300px',
            marginBottom: '15px',
            transition: 'background-color 0.2s'
          }}
          onMouseOver={(e) => e.target.style.backgroundColor = '#3367d6'}
          onMouseOut={(e) => e.target.style.backgroundColor = '#4285f4'}
        >
          üìß –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
        </button>
        
        <p style={{ 
          fontSize: '14px', 
          color: '#666', 
          marginTop: '20px',
          lineHeight: '1.5'
        }}>
          –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω–µ—Ç–µ—Å—å –≤ –±–æ—Ç–∞ –∏ —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ü–µ–Ω.
        </p>
      </div>
    </div>
  );
};

export default TelegramAuth;