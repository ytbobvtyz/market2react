import React, { useEffect, useContext } from 'react';
import { useNavigate, useSearchParams } from 'react-router-dom';
import { AuthContext } from '../contexts/auth-context';
import { api, setAuthToken } from '../api/apiService';

const OAuthSuccess = () => {
  const [searchParams] = useSearchParams();
  const navigate = useNavigate();
  const { login } = useContext(AuthContext);

  useEffect(() => {
    const handleOAuthCallback = async () => {
      const token = searchParams.get('token');
      const error = searchParams.get('error');
      const message = searchParams.get('message');

      if (error) {
        console.error('OAuth error:', message);
        alert(`–û—à–∏–±–∫–∞ OAuth: ${message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
        navigate('/');
        return;
      }

      if (token) {
        try {
          console.log('üîë Processing OAuth token...');
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
          localStorage.setItem('access_token', token);
          setAuthToken(token);
          
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const response = await api.get('/auth/me');
          console.log('‚úÖ User data received:', response.data);
          
          login(response.data);
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          navigate('/');
          
        } catch (error) {
          console.error('OAuth processing error:', error);
          alert('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ OAuth —Ç–æ–∫–µ–Ω–∞');
          navigate('/');
        }
      } else {
        console.error('No token received');
        navigate('/');
      }
    };

    handleOAuthCallback();
  }, [searchParams, navigate, login]);

  return (
    <div style={{ padding: '50px', textAlign: 'center' }}>
      <h2>üîê –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞...</h2>
      <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.</p>
    </div>
  );
};

export default OAuthSuccess;